{"version":3,"sources":["components/services/personsService.js","components/Input.js","components/AddForm.js","components/Person.js","components/Persons.js","components/Notification.js","components/App.js","index.js"],"names":["baseURL","axios","get","then","response","data","person","post","id","delete","put","Input","label","name","value","handleInput","onChange","AddForm","handleSubmit","number","handleChange","onSubmit","type","Person","handleDelete","onClick","Persons","persons","map","key","Notification","notification","className","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchValue","setSearchValue","setNotification","useEffect","personsService","toLowerCase","includes","push","e","target","preventDefault","duplicate","newPerson","length","concat","setTimeout","window","confirm","modifiedObj","filter","p","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45802546.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL = '/api/persons';\n\nconst getAll = () => {\n\treturn axios.get(baseURL).then((response) => response.data);\n};\n\nconst create = (person) => {\n\treturn axios.post(baseURL, person).then((response) => response.data);\n};\n\nconst remove = (id) => {\n\treturn axios.delete(`${baseURL}/${id}`);\n};\n\nconst update = (id, data) => {\n\treturn axios.put(`${baseURL}/${id}`, data).then((response) => response.data);\n};\n\nexport default { getAll, create, remove, update };\n","import React from 'react';\n\nconst Input = ({ label, name, value, handleInput }) => {\n\n  return (\n    <>\n      {label} <input name={name} value={value} onChange={handleInput} />\n    </>\n  );\n}\n\nexport default Input;","import React from 'react';\nimport Input from './Input';\n\nconst AddForm = ({ handleSubmit, name, number, handleChange }) => {\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div>\n          name: <Input name={'name'} value={name} handleInput={handleChange} />\n        </div>\n        <div>\n          number: <Input name={'number'} value={number} handleInput={handleChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default AddForm;","import React from \"react\";\n\nconst Person = ({ person, handleDelete }) => {\n  return (\n    <li>\n      {person.name} {person.number}{\" \"}\n      <button onClick={() => handleDelete(person)}>delete</button>\n    </li>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ persons, handleDelete }) => {\n  return (\n    <ul>\n      {persons.map((person) => (\n        <Person key={person.id} person={person} handleDelete={handleDelete} />\n      ))}\n    </ul>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Notification = ({ notification }) => {\n\tif (notification === null) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className={notification.type}>\n\t\t\t<p>{notification.message}</p>\n\t\t</div>\n\t);\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport personsService from './services/personsService';\nimport Input from './Input';\nimport AddForm from './AddForm';\nimport Persons from './Persons';\nimport Notification from './Notification';\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([]);\n\n\tconst [newName, setNewName] = useState('');\n\tconst [newNumber, setNewNumber] = useState('');\n\tconst [searchValue, setSearchValue] = useState('');\n\tconst [notification, setNotification] = useState(null);\n\n\tuseEffect(() => {\n\t\tpersonsService.getAll().then((persons) => {\n\t\t\tsetPersons(persons);\n\t\t});\n\t}, []);\n\n\tconst handleSearch = (e) => setSearchValue(e.target.value);\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tif (!newName) return;\n\n\t\tlet duplicate = null;\n\t\tpersons.map((person) => {\n\t\t\tif (newName.toLowerCase() === person.name.toLowerCase()) {\n\t\t\t\tduplicate = person;\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tif (duplicate !== null) {\n\t\t\tif (\n\t\t\t\twindow.confirm(\n\t\t\t\t\t`${duplicate.name} already exists in the phonebook, replace the old phone number with a new one?`\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tconst modifiedObj = {\n\t\t\t\t\tname: newName,\n\t\t\t\t\tnumber: newNumber,\n\t\t\t\t};\n\n\t\t\t\tpersonsService\n\t\t\t\t\t.update(duplicate.id, modifiedObj)\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\tsetPersons(\n\t\t\t\t\t\t\tpersons.filter((p) => p.id !== duplicate.id).concat(data)\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tsetPersons(persons.filter((p) => p.id !== duplicate.id));\n\n\t\t\t\t\t\tsetNotification({\n\t\t\t\t\t\t\tmessage: `Information of ${modifiedObj.name} has already been deleted from server.`,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tsetTimeout(() => setNotification(null), 5000);\n\t\t\t\t\t});\n\n\t\t\t\tsetNewName('');\n\t\t\t\tsetNewNumber('');\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPerson = {\n\t\t\tname: newName,\n\t\t\tnumber: newNumber,\n\t\t\tid: persons.length + 1,\n\t\t};\n\n\t\tpersonsService.create(newPerson).then((data) => {\n\t\t\tsetPersons(persons.concat(data));\n\t\t});\n\n\t\tsetNotification({\n\t\t\tmessage: `Added ${newPerson.name}.`,\n\t\t\ttype: 'success',\n\t\t});\n\t\tsetTimeout(() => setNotification(null), 5000);\n\t\tsetNewName('');\n\t\tsetNewNumber('');\n\t}\n\n\tfunction handleChange(e) {\n\t\tif (e.target.name === 'name') {\n\t\t\tsetNewName(e.target.value);\n\t\t}\n\n\t\tif (e.target.name === 'number') {\n\t\t\tsetNewNumber(e.target.value);\n\t\t}\n\t}\n\n\tfunction handleDelete(person) {\n\t\tif (window.confirm(`Are you sure you want to delete ${person.name}?`)) {\n\t\t\tpersonsService.remove(person.id);\n\t\t\tsetPersons(persons.filter((p) => p.id !== person.id));\n\t\t}\n\t}\n\n\tlet data = [...persons];\n\n\tif (searchValue !== '') {\n\t\tdata = [];\n\n\t\tpersons.map((person) => {\n\t\t\tif (person.name.toLowerCase().includes(searchValue.toLowerCase())) {\n\t\t\t\tdata.push(person);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Notification notification={notification} />\n\t\t\t<Input\n\t\t\t\tlabel={'search filter'}\n\t\t\t\tvalue={searchValue}\n\t\t\t\thandleInput={handleSearch}\n\t\t\t/>\n\n\t\t\t<h2>Add a new</h2>\n\n\t\t\t<AddForm\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tname={newName}\n\t\t\t\tnumber={newNumber}\n\t\t\t/>\n\n\t\t\t<h2>Numbers</h2>\n\n\t\t\t<Persons persons={data} handleDelete={handleDelete} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}